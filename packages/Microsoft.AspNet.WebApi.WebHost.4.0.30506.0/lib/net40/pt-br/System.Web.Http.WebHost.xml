<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http.WebHost</name>
  </assembly>
  <members>
    <member name="T:System.Web.Http.GlobalConfiguration">
      <summary> Fornece uma <see cref="T:System.Web.Http.HttpConfiguration" /> global para aplicativos ASP.NET. </summary>
    </member>
    <member name="P:System.Web.Http.GlobalConfiguration.Configuration"></member>
    <member name="P:System.Web.Http.GlobalConfiguration.DefaultHandler">
      <summary> Obtém o manipulador de mensagens padrão que será chamado para todas as solicitações. </summary>
    </member>
    <member name="T:System.Web.Http.RouteCollectionExtensions">
      <summary> Métodos de extensão para <see cref="T:System.Web.Routing.RouteCollection" /></summary>
    </member>
    <member name="M:System.Web.Http.RouteCollectionExtensions.MapHttpRoute(System.Web.Routing.RouteCollection,System.String,System.String)">
      <summary>Mapeia o modelo de rota especificado.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="name">O nome da rota a ser mapeada.</param>
      <param name="routeTemplate">O modelo de rota para a rota.</param>
    </member>
    <member name="M:System.Web.Http.RouteCollectionExtensions.MapHttpRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)">
      <summary>Mapeia o modelo da rota especificada e define a rota padrão.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="name">O nome da rota a ser mapeada.</param>
      <param name="routeTemplate">O modelo de rota para a rota.</param>
      <param name="defaults">Um objeto que contém valores de rota padrão.</param>
    </member>
    <member name="M:System.Web.Http.RouteCollectionExtensions.MapHttpRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Mapeia o modelo de rota especificado e define as restrições e os valores de rota padrão.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="name">O nome da rota a ser mapeada.</param>
      <param name="routeTemplate">O modelo de rota para a rota.</param>
      <param name="defaults">Um objeto que contém valores de rota padrão.</param>
      <param name="constraints">Um conjunto de expressões que especificam valores para routeTemplate.</param>
    </member>
    <member name="M:System.Web.Http.RouteCollectionExtensions.MapHttpRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.Net.Http.HttpMessageHandler)">
      <summary>Mapeia o modelo de rota especificado e define os valores da rota padrão, as restrições e o manipulador de mensagem do ponto de extremidade.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="name">O nome da rota a ser mapeada.</param>
      <param name="routeTemplate">O modelo de rota para a rota.</param>
      <param name="defaults">Um objeto que contém valores de rota padrão.</param>
      <param name="constraints">Um conjunto de expressões que especificam valores para routeTemplate.</param>
      <param name="handler">O manipulador para o qual a solicitação será distribuída.</param>
    </member>
    <member name="T:System.Web.Http.WebHost.HttpControllerHandler">
      <summary> Um <see cref="T:System.Web.IHttpAsyncHandler" /> que passa as solicitações do ASP.NET para o pipeline do <see cref="T:System.Web.Http.HttpServer" /> e grava os resultados. </summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.#ctor(System.Web.Routing.RouteData)">
      <summary> Inicializa uma nova instância da classe <see cref="T:System.Web.Http.WebHost.HttpControllerHandler" />. </summary>
      <param name="routeData">Os dados de rota.</param>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary> Começa a solicitação do processo. </summary>
      <returns>Um <see cref="T:System.IAsyncResult" /> que contém informações sobre o status do processo. </returns>
      <param name="httpContextBase">O contexto básico HTTP.</param>
      <param name="callback">O retorno de chamada.</param>
      <param name="state">O estado.</param>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.EndProcessRequest(System.IAsyncResult)">
      <summary> Fornece um método Final de processo assíncrono quando o processo termina. </summary>
      <param name="result">Um <see cref="T:System.IAsyncResult" /> que contém informações sobre o status do processo.</param>
    </member>
    <member name="P:System.Web.Http.WebHost.HttpControllerHandler.IsReusable">
      <summary> Obtém um valor que indica se outra solicitação pode usar a instância do <see cref="T:System.Web.IHttpHandler" />. </summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.ProcessRequest(System.Web.HttpContextBase)">
      <summary> Processa a solicitação. </summary>
      <param name="httpContextBase">O contexto básico HTTP.</param>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary> Começa a processar a solicitação. </summary>
      <returns>Um <see cref="T:System.IAsyncResult" /> que contém informações sobre o status do processo. </returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="callback">O retorno de chamada.</param>
      <param name="state">O estado.</param>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary> Fornece um método Final de processo assíncrono quando o processo termina. </summary>
      <param name="result">Um <see cref="T:System.IAsyncResult" /> que contém informações sobre o status do processo.</param>
    </member>
    <member name="P:System.Web.Http.WebHost.HttpControllerHandler.System#Web#IHttpHandler#IsReusable">
      <summary> Obtém um valor que indica se outra solicitação pode usar a instância do <see cref="T:System.Web.IHttpHandler" />. </summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary> Processa a solicitação. </summary>
      <param name="httpContext">O contexto básico HTTP.</param>
    </member>
    <member name="T:System.Web.Http.WebHost.HttpControllerRouteHandler">
      <summary> Um <see cref="T:System.Web.Routing.IRouteHandler" /> que retorna instâncias do <see cref="T:System.Web.Http.WebHost.HttpControllerHandler" /> que pode passar solicitações a uma determinada instância do <see cref="T:System.Web.Http.HttpServer" />. </summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerRouteHandler.#ctor">
      <summary> Inicializa uma nova instância da classe <see cref="T:System.Web.Http.WebHost.HttpControllerRouteHandler" />. </summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary> Fornece o objeto que processa a solicitação. </summary>
      <returns> Um objeto que processa a solicitação. </returns>
      <param name="requestContext">Um objeto que encapsula informações sobre a solicitação.</param>
    </member>
    <member name="P:System.Web.Http.WebHost.HttpControllerRouteHandler.Instance">
      <summary> Obtém a instância do <see cref="T:System.Web.Http.WebHost.HttpControllerRouteHandler" /> singleton. </summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary> Fornece o objeto que processa a solicitação. </summary>
      <returns> Um objeto que processa a solicitação. </returns>
      <param name="requestContext">Um objeto que encapsula informações sobre a solicitação.</param>
    </member>
    <member name="T:System.Web.Http.WebHost.PreApplicationStartCode">
      <summary>Fornece um ponto de registro para o código inicial pré-aplicativo de associação simples.</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.PreApplicationStartCode.Start">
      <summary>Registra o código inicial pré-aplicativo de associação simples.</summary>
    </member>
    <member name="T:System.Web.Http.WebHost.WebHostBufferPolicySelector">
      <summary>Representa o seletor de política de armazenamento em buffer para o host da Web.</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.WebHostBufferPolicySelector.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.WebHost.WebHostBufferPolicySelector" />.</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.WebHostBufferPolicySelector.UseBufferedInputStream(System.Object)">
      <summary>Obtém um valor que indica se o host deve armazenar em buffer o corpo da entidade da solicitação HTTP.</summary>
      <returns>verdadeiro se o armazenamento em buffer deve ser usado; caso contrário, uma solicitação transmitida deve ser usada.</returns>
      <param name="hostContext">O contexto do host.</param>
    </member>
    <member name="M:System.Web.Http.WebHost.WebHostBufferPolicySelector.UseBufferedOutputStream(System.Net.Http.HttpResponseMessage)">
      <summary>Utiliza um fluxo de saída armazenado em buffer para o host da Web.</summary>
      <returns>Um fluxo de saída armazenado em buffer.</returns>
      <param name="response">A resposta.</param>
    </member>
  </members>
</doc>